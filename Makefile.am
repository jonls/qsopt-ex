
ACLOCAL_AMFLAGS = -I m4

# These source files are used as is for the library
MAIN_SOURCE_FILES = \
	qsopt_ex/allocrus.c \
	qsopt_ex/bgetopt.c \
	qsopt_ex/eg_io.c \
	qsopt_ex/eg_lpnum.c \
	qsopt_ex/except.c \
	qsopt_ex/urandom.c \
	qsopt_ex/zeit.c \
	qsopt_ex/names.c \
	qsopt_ex/symtab.c \
	qsopt_ex/util.c \
	qsopt_ex/logging.c \
	qsopt_ex/exact.c \
	qsopt_ex/reporter.c \
	qsopt_ex/eg_exutil.c \
	qsopt_ex/eg_macros.c \
	qsopt_ex/eg_memslab.c \
	qsopt_ex/sortrus_common.c \
	qsopt_ex/QSopt_ex_version.c

# Header files
PUBLIC_HEADER_FILES = \
	qsopt_ex/bgetopt.h \
	qsopt_ex/eg_io.h \
	qsopt_ex/eg_lpnum.h \
	qsopt_ex/urandom.h \
	qsopt_ex/zeit.h \
	qsopt_ex/names.h \
	qsopt_ex/symtab.h \
	qsopt_ex/exact.h \
	qsopt_ex/reporter.h \
	qsopt_ex/eg_exutil.h \
	qsopt_ex/eg_macros.h \
	qsopt_ex/eg_memslab.h \
	qsopt_ex/eg_mem.h \
	qsopt_ex/eg_elist.h \
	qsopt_ex/eg_nummacros.h \
	qsopt_ex/eg_lpnum.dbl.h \
	qsopt_ex/eg_lpnum.mpq.h \
	qsopt_ex/eg_lpnum.mpf.h \
	qsopt_ex/eg_timer.h \
	qsopt_ex/basicdefs.h \
	qsopt_ex/stddefs.h \
	qsopt_ex/sortrus_common.h \
	qsopt_ex/QSopt_ex_version.h \
	qsopt_ex/QSopt_ex.h \
	qsopt_ex/logging.h

PRIVATE_HEADER_FILES = \
	qsopt_ex/allocrus.h \
	qsopt_ex/except.h \
	qsopt_ex/logging-private.h \
	qsopt_ex/logging.h \
	qsopt_ex/qs_config.h \
	qsopt_ex/trace.h \
	qsopt_ex/util.h

# These source files have to be instantiated using the
# type template mechanism
TEMPLATE_SOURCE_FILES = \
	qsopt_ex/rawlp.c \
	qsopt_ex/mps.c \
	qsopt_ex/read_mps.c \
	qsopt_ex/lp.c \
	qsopt_ex/write_lp.c \
	qsopt_ex/read_lp.c \
	qsopt_ex/readline.c \
	qsopt_ex/lpdata.c \
	qsopt_ex/presolve.c \
	qsopt_ex/factor.c \
	qsopt_ex/basis.c \
	qsopt_ex/price.c \
	qsopt_ex/dstruct.c \
	qsopt_ex/simplex.c \
	qsopt_ex/fct.c \
	qsopt_ex/ratio.c \
	qsopt_ex/lib.c \
	qsopt_ex/binary.c \
	qsopt_ex/qsopt.c \
	qsopt_ex/sortrus.c \
	qsopt_ex/dheaps_i.c \
	qsopt_ex/priority.c \
	qsopt_ex/editor.c \
	qsopt_ex/format.c \
	qsopt_ex/eg_numutil.c

TEMPLATE_PUBLIC_HEADER_FILES = \
	qsopt_ex/write_lp.h \
	qsopt_ex/read_lp.h \
	qsopt_ex/read_mps.h \
	qsopt_ex/readline.h \
	qsopt_ex/lpdata.h \
	qsopt_ex/presolve.h \
	qsopt_ex/factor.h \
	qsopt_ex/basis.h \
	qsopt_ex/price.h \
	qsopt_ex/dstruct.h \
	qsopt_ex/simplex.h \
	qsopt_ex/fct.h \
	qsopt_ex/ratio.h \
	qsopt_ex/lib.h \
	qsopt_ex/binary.h \
	qsopt_ex/qsopt.h \
	qsopt_ex/sortrus.h \
	qsopt_ex/dheaps_i.h \
	qsopt_ex/priority.h \
	qsopt_ex/editor.h \
	qsopt_ex/format.h \
	qsopt_ex/lpdefs.h \
	qsopt_ex/qstruct.h \
	qsopt_ex/eg_numutil.h

TEMPLATE_PRIVATE_HEADER_FILES = \
	qsopt_ex/rawlp.h \
	qsopt_ex/mps.h \
	qsopt_ex/lp.h

# Define specific template sources
TEMPLATE_SOURCES_DBL = $(TEMPLATE_SOURCE_FILES:.c=_dbl.c)
TEMPLATE_PUBLIC_HEADERS_DBL = \
	$(TEMPLATE_PUBLIC_HEADER_FILES:.h=_dbl.h)
TEMPLATE_HEADERS_DBL = \
	$(TEMPLATE_PUBLIC_HEADERS_DBL) \
	$(TEMPLATE_PRIVATE_HEADER_FILES:.h=_dbl.h)

$(TEMPLATE_SOURCES_DBL): %_dbl.c: %.c Makefile
	$(AM_V_GEN)$(MKDIR_P) $(@D) && ( \
		echo "/* WARNING! This file was autogenerated from template */" && \
		$(SED) -e 's|EGLPNUM_TYPENAME|dbl|g' -e 's|EGLPNUM_TYPE|double|g' $< ) > $@
$(TEMPLATE_HEADERS_DBL): %_dbl.h: %.h Makefile
	$(AM_V_GEN)$(MKDIR_P) $(@D) && ( \
		echo "/* WARNING! This file was autogenerated from template */" && \
		$(SED) -e 's|EGLPNUM_TYPENAME|dbl|g' -e 's|EGLPNUM_TYPE|double|g' $< ) > $@

TEMPLATE_SOURCES_MPQ = $(TEMPLATE_SOURCE_FILES:.c=_mpq.c)
TEMPLATE_PUBLIC_HEADERS_MPQ = \
	$(TEMPLATE_PUBLIC_HEADER_FILES:.h=_mpq.h)
TEMPLATE_HEADERS_MPQ = \
	$(TEMPLATE_PUBLIC_HEADERS_MPQ) \
	$(TEMPLATE_PRIVATE_HEADER_FILES:.h=_mpq.h)

$(TEMPLATE_SOURCES_MPQ): %_mpq.c: %.c Makefile
	$(AM_V_GEN)$(MKDIR_P) $(@D) && ( \
		echo "/* WARNING! This file was autogenerated from template */" && \
		$(SED) -e 's|EGLPNUM_TYPENAME|mpq|g' -e 's|EGLPNUM_TYPE|mpq_t|g' $< ) > $@
$(TEMPLATE_HEADERS_MPQ): %_mpq.h: %.h Makefile
	$(AM_V_GEN)$(MKDIR_P) $(@D) && ( \
		echo "/* WARNING! This file was autogenerated from template */" && \
		$(SED) -e 's|EGLPNUM_TYPENAME|mpq|g' -e 's|EGLPNUM_TYPE|mpq_t|g' $< ) > $@

TEMPLATE_SOURCES_MPF = $(TEMPLATE_SOURCE_FILES:.c=_mpf.c)
TEMPLATE_PUBLIC_HEADERS_MPF = \
	$(TEMPLATE_PUBLIC_HEADER_FILES:.h=_mpf.h)
TEMPLATE_HEADERS_MPF = \
	$(TEMPLATE_PUBLIC_HEADERS_MPF) \
	$(TEMPLATE_PRIVATE_HEADER_FILES:.h=_mpf.h)

$(TEMPLATE_SOURCES_MPF): %_mpf.c: %.c Makefile
	$(AM_V_GEN)$(MKDIR_P) $(@D) && ( \
		echo "/* WARNING! This file was autogenerated from template */" && \
		$(SED) -e 's|EGLPNUM_TYPENAME|mpf|g' -e 's|EGLPNUM_TYPE|mpf_t|g' $< ) > $@
$(TEMPLATE_HEADERS_MPF): %_mpf.h: %.h Makefile
	$(AM_V_GEN)$(MKDIR_P) $(@D) && ( \
		echo "/* WARNING! This file was autogenerated from template */" && \
		$(SED) -e 's|EGLPNUM_TYPENAME|mpf|g' -e 's|EGLPNUM_TYPE|mpf_t|g' $< ) > $@

# Define complete set of template files
TEMPLATE_FILES = \
	$(TEMPLATE_SOURCES_DBL) $(TEMPLATE_HEADERS_DBL) \
	$(TEMPLATE_SOURCES_MPQ) $(TEMPLATE_HEADERS_MPQ) \
	$(TEMPLATE_SOURCES_MPF) $(TEMPLATE_HEADERS_MPF)

# Tell automake that these are generated files
BUILT_SOURCES = $(TEMPLATE_FILES)


AM_CFLAGS = -I$(top_srcdir)/qsopt_ex -I$(top_builddir)/qsopt_ex

# Library files
lib_LTLIBRARIES = libqsopt_ex.la
libqsopt_ex_la_SOURCES = \
	$(MAIN_SOURCE_FILES) $(PUBLIC_HEADER_FILES) \
	$(PRIVATE_HEADER_FILES)
nodist_libqsopt_ex_la_SOURCES = \
	$(TEMPLATE_FILES)
libqsopt_ex_la_CFLAGS = \
	$(AM_CFLAGS) $(GMP_CFLAGS)
libqsopt_ex_la_LDFLAGS = \
	-no-undefined \
	-version-info $(LT_VERSION_INFO) \
	-export-symbols-regex "^(QS|dbl_QS|mpq_QS|mpf_QS|EGio|mpq_ILL_MAXDOUBLE|mpq_ILL_MINDOUBLE)" \
	$(AM_LDFLAGS)
libqsopt_ex_la_LIBADD = $(GMP_LIBS)

# Library header files
headerdir = $(includedir)/qsopt_ex
header_DATA = \
	$(PUBLIC_HEADER_FILES) \
	$(TEMPLATE_PUBLIC_HEADERS_DBL) \
	$(TEMPLATE_PUBLIC_HEADERS_MPQ) \
	$(TEMPLATE_PUBLIC_HEADERS_MPF)


# Program files
bin_PROGRAMS = esolver/esolver
noinst_PROGRAMS = tests/test_qs tests/eg_sloan

tests_test_qs_SOURCES = tests/test_qs.c
tests_test_qs_CFLAGS = $(AM_CFLAGS) $(GMP_CFLAGS)
tests_test_qs_LDADD = $(GMP_LIBS) libqsopt_ex.la

tests_eg_sloan_SOURCES = \
	tests/eg_sloan.c tests/eg_sloan.h \
	qsopt_ex/eg_exutil.c \
	qsopt_ex/eg_lpnum.c \
	qsopt_ex/eg_memslab.c
tests_eg_sloan_CFLAGS = $(AM_CFLAGS) $(GMP_CFLAGS)
tests_eg_sloan_LDADD = $(GMP_LIBS) libqsopt_ex.la

esolver_esolver_SOURCES = \
	esolver/esolver.c \
	qsopt_ex/bgetopt.c \
	qsopt_ex/zeit.c
esolver_esolver_CFLAGS = $(AM_CFLAGS) $(GMP_CFLAGS)
esolver_esolver_LDADD = $(GMP_LIBS) libqsopt_ex.la


# Tests
LOG_DRIVER = env AM_TAP_AWK='$(AWK)' $(SHELL) \
	$(top_srcdir)/tap-driver.sh
TESTS = tests/test_qs


# Additional files to be distributed. Always run `make distcheck`
# to be sure all necessary files are distributed!
EXTRA_DIST = \
	README.md NEWS.md Doxyfile License.txt \
	$(TEMPLATE_SOURCE_FILES) \
	$(TEMPLATE_PUBLIC_HEADER_FILES) \
	$(TEMPLATE_PRIVATE_HEADER_FILES)

# Clean files
CLEANFILES = \
	$(TEMPLATE_FILES)
